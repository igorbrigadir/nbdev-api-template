# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
    -   repo: meta
        hooks:
        -   id: identity
            name: Modified Files
        -   id: identity
            name: Modified Notebooks
            files: .ipynb
    # Clean usueless Notebook metadata that adds extra changes and conflicts - eg: cell run counts:
    -   repo: local
        hooks:
        -   id: nbdev_clean_nbs
            name: Clean Notebooks
            entry: nbdev_clean_nbs
            additional_dependencies: [nbdev>=1.1.22, "black[jupyter]>=21.9b0"]
            files: .ipynb
            pass_filenames: false
            language: python
    # Convert the notebooks into python scripts and format them with black, one file at a time with xargs:
    -   repo: local
        hooks:
        -   id: nbdev_build_lib
            name: Build library with nbdev
            entry: bash -c 'nbdev_build_lib --bare; black .' --
            additional_dependencies: [nbdev>=1.1.22, "black[jupyter]>=21.9b0"]
            files: .ipynb
            pass_filenames: false
            language: python
    # black format for any other non notebook derived py files:
    -   repo: https://github.com/psf/black
        rev: '21.9b0'
        hooks:
        -   id: black
            language_version: python3.8
    # Trailing white space removal includes other files as too but excluding ipynb files, also a large file check:
    -   repo: https://github.com/pre-commit/pre-commit-hooks
        rev: 'v4.0.1'
        hooks:
        -   id: trailing-whitespace
            exclude: .ipynb
        -   id: end-of-file-fixer
            exclude: .ipynb
        -   id: check-yaml
        -   id: check-added-large-files
    # Flake python code style check but excluding long line errors (E501):
    -   repo: https://gitlab.com/PyCQA/flake8
        rev: '3.9.2'
        hooks:
        -   id: flake8
            entry: flake8 --ignore=E501
            additional_dependencies: [flake8-typing-imports>=1.10.1]
    # Run a subset of tests marked "fast" for commits only:
    -   repo: local
        hooks:
            -   id: tests
                name: run tests
                entry: pytest -v -m fast
                language: python
                additional_dependencies: [pre-commit>=2.10, pytest]
                always_run: true
                pass_filenames: false
                types: [python]
                stages: [commit]
    # Run all the tests, including slow ones, and stopping at first failure when pushing:
    -   repo: local
        hooks:
            -   id: tests
                name: run tests
                entry: pytest -x
                language: python
                additional_dependencies: [pre-commit>=2.10, pytest]
                types: [python]
                stages: [push]
